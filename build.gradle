plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.zornx5'
version '0.2.0'

//username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'org.slf4j:slf4j-api:1.7.33'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.33'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        html.enabled false
        xml.enabled true
        csv.enabled false
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addStringOption("charset", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'certificate-helper'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'certificate-helper'
                description = 'a key or certificate helper'
                url = 'https://zornx5.github.io'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'zornx5'
                        name = 'zornx5'
                        email = 'zornx5@gmail.com'
                    }
                }
                scm {
                    url = 'git@github.com:zornx5/certificate-helper.git'
                    connection = 'scm:git@github.com:zornx5/certificate-helper.git'
                    developerConnection = 'scm:git@github.com:zornx5/certificate-helper.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = findProperty("ossrhUsername") ?:
                        (System.getProperty('ossrhUsername') ?: System.getenv("OSSRH_USERNAME"))
                password = findProperty("ossrhPassword") ?:
                        (System.getProperty('ossrhPassword') ?: System.getenv("OSSRH_PASSWORD"))
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
